{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Projects\\\\React Native\\\\React-MobilProje\\\\App.js\";\n\nimport 'react-native-gesture-handler';\nimport * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ViewBase } from \"react-native-web/dist/index\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport FirstPage from \"./screens/Home\";\nimport SecondPage from \"./screens/Login\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\n\nvar NavigationDrawerStructure = function NavigationDrawerStructure(props) {\n  var toggleDrawer = function toggleDrawer() {\n    props.navigationProps.toggleDrawer();\n  };\n\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleDrawer();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: 'https://raw.githubusercontent.com/AboutReact/sampleresource/master/drawerWhite.png'\n    },\n    style: {\n      width: 25,\n      height: 25,\n      marginLeft: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n};\n\nfunction firstScreenStack(_ref) {\n  var _this2 = this;\n\n  var navigation = _ref.navigation;\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"FirstPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"FirstPage\",\n    component: FirstPage,\n    options: {\n      title: 'First Page',\n      headerLeft: function headerLeft() {\n        return React.createElement(NavigationDrawerStructure, {\n          navigationProps: navigation,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#f4511e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction secondScreenStack(_ref2) {\n  var _this3 = this;\n\n  var navigation = _ref2.navigation;\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"SecondPage\",\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return React.createElement(NavigationDrawerStructure, {\n          navigationProps: navigation,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#f4511e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"SecondPage\",\n    component: SecondPage,\n    options: {\n      title: 'Second Page'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"afds\")), React.createElement(Drawer.Navigator, {\n    drawerContentOptions: {\n      activeTintColor: '#e91e63',\n      itemStyle: {\n        marginVertical: 5\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, React.createElement(Drawer.Text, {\n    title: \"asdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"FirstPage\",\n    options: {\n      drawerLabel: 'Giriş'\n    },\n    component: firstScreenStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"SecondPage\",\n    options: {\n      drawerLabel: 'İletişim'\n    },\n    component: secondScreenStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Projects/React Native/React-MobilProje/App.js"],"names":["React","ViewBase","NavigationContainer","createStackNavigator","createDrawerNavigator","FirstPage","SecondPage","Stack","Drawer","NavigationDrawerStructure","props","toggleDrawer","navigationProps","flexDirection","uri","width","height","marginLeft","firstScreenStack","navigation","title","headerLeft","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","secondScreenStack","App","activeTintColor","itemStyle","marginVertical","drawerLabel"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\r\n\r\nimport * as React from 'react';\r\nimport {\r\n  Button,\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  Image,\r\n  ViewBase\r\n} from 'react-native';\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\n\r\nimport FirstPage from './screens/Home';\r\nimport SecondPage from './screens/Login';\r\n\r\nconst Stack = createStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\n\r\nconst NavigationDrawerStructure = (props)=> {\r\n  //Structure for the navigatin Drawer\r\n  const toggleDrawer = () => {\r\n    //Props to open/close the drawer\r\n    props.navigationProps.toggleDrawer();\r\n  };\r\n\r\n  return (\r\n    <View style={{ flexDirection: 'row' }}>\r\n      <TouchableOpacity onPress={()=> toggleDrawer()}>\r\n        {/*Donute Button Image */}\r\n        <Image\r\n          source={{uri: 'https://raw.githubusercontent.com/AboutReact/sampleresource/master/drawerWhite.png'}}\r\n          style={{\r\n            width: 25,\r\n            height: 25,\r\n            marginLeft: 10\r\n          }}\r\n        />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction firstScreenStack({ navigation }) {\r\n  return (\r\n      <Stack.Navigator initialRouteName=\"FirstPage\">\r\n        <Stack.Screen\r\n          name=\"FirstPage\"\r\n          component={FirstPage}\r\n          options={{\r\n            title: 'First Page', //Set Header Title\r\n            headerLeft: ()=>\r\n              <NavigationDrawerStructure\r\n                navigationProps={navigation}\r\n              />,\r\n            headerStyle: {\r\n              backgroundColor: '#f4511e', //Set Header color\r\n            },\r\n            headerTintColor: '#fff', //Set Header text color\r\n            headerTitleStyle: {\r\n              fontWeight: 'bold', //Set Header text style\r\n            },\r\n          }}\r\n        />\r\n      </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction secondScreenStack({ navigation }) {\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"SecondPage\"\r\n      screenOptions={{\r\n        headerLeft: ()=>\r\n          <NavigationDrawerStructure\r\n            navigationProps={navigation}\r\n          />,\r\n        headerStyle: {\r\n          backgroundColor: '#f4511e', //Set Header color\r\n        },\r\n        headerTintColor: '#fff', //Set Header text color\r\n        headerTitleStyle: {\r\n          fontWeight: 'bold', //Set Header text style\r\n        }\r\n      }}>\r\n      <Stack.Screen\r\n        name=\"SecondPage\"\r\n        component={SecondPage}\r\n        options={{\r\n          title: 'Second Page', //Set Header Title\r\n          \r\n        }}/>\r\n      \r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n    <NavigationContainer>\r\n      <View>\r\n        <Text>afds</Text>\r\n      </View>\r\n      <Drawer.Navigator\r\n        drawerContentOptions={{\r\n          activeTintColor: '#e91e63',\r\n          itemStyle: { marginVertical: 5 },\r\n        }}\r\n        >\r\n          <Drawer.Text\r\n           \r\n           title=\"asdf\"\r\n          />\r\n\r\n        <Drawer.Screen\r\n          name=\"FirstPage\"\r\n          options={{ drawerLabel: 'Giriş' }}\r\n          component={firstScreenStack} />\r\n        <Drawer.Screen\r\n          name=\"SecondPage\"\r\n          options={{ drawerLabel: 'İletişim' }}\r\n          component={secondScreenStack} />\r\n      </Drawer.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}