{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\React Native\\\\React-MobilProje\\\\App.js\",\n    _this = this;\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Header } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer, DrawerActions } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar Stack = createStackNavigator();\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport { BorderlessButton } from 'react-native-gesture-handler';\n\nfunction Feed(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Feed Screen\"), React.createElement(Button, {\n    title: \"Open drawer\",\n    onPress: function onPress() {\n      return navigation.dispatch(DrawerActions.openDrawer());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Toggle drawer\",\n    onPress: function onPress() {\n      return navigation.dispatch(DrawerActions.toggleDrawer());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Notifications() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Notifications Screen\"));\n}\n\nfunction CustomDrawerContent(props) {\n  return React.createElement(DrawerContentScrollView, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: {\n      paddingLeft: 20,\n      paddingTop: 30,\n      height: 180,\n      backgroundColor: '#f0f0f0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"./images/logo.png\"),\n    style: {\n      height: 76,\n      width: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.isim,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Mehmet HANEDAR\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"mehmethanedar@hotmail.com\")), React.createElement(DrawerItemList, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  })), React.createElement(DrawerItem, {\n    label: \"Close drawer\",\n    onPress: function onPress() {\n      return props.navigation.dispatch(DrawerActions.closeDrawer());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(DrawerItem, {\n    label: \"Toggle drawer\",\n    onPress: function onPress() {\n      return props.navigation.dispatch(DrawerActions.toggleDrawer());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Drawer = createDrawerNavigator();\n\nvar NavigationDrawerStructure = function NavigationDrawerStructure(props) {\n  var toggleDrawer = function toggleDrawer() {\n    props.navigationProps.toggleDrawer();\n  };\n\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return toggleDrawer();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: 'https://raw.githubusercontent.com/AboutReact/sampleresource/master/drawerWhite.png'\n    },\n    style: {\n      width: 25,\n      height: 25,\n      marginLeft: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })), React.createElement(Image, {\n    source: require(\"./images/logo.png\"),\n    style: {\n      height: 60,\n      width: 190\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction firstScreenStack(_ref2) {\n  var _this2 = this;\n\n  var navigation = _ref2.navigation;\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"FirstPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"FirstPage\",\n    component: Feed,\n    options: {\n      title: 'Triliya',\n      headerLeft: function headerLeft() {\n        return React.createElement(NavigationDrawerStructure, {\n          navigationProps: navigation,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#f4511e'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction MyDrawer() {\n  var _this3 = this;\n\n  return React.createElement(Drawer.Navigator, {\n    drawerContentOptions: {\n      activeTintColor: '#e91e63'\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerContent, _extends({}, props, {\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 33\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Feed\",\n    component: firstScreenStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Notifications\",\n    component: Notifications,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"asdd\",\n    component: Notifications,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function App() {\n  var toggleDrawer = function toggleDrawer() {\n    props.navigationProps.toggleDrawer();\n  };\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, React.createElement(MyDrawer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  isim: {\n    fontWeight: 'bold',\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["D:/Projects/React Native/React-MobilProje/App.js"],"names":["React","Header","NavigationContainer","DrawerActions","createStackNavigator","Stack","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","BorderlessButton","Feed","navigation","flex","justifyContent","alignItems","dispatch","openDrawer","toggleDrawer","Notifications","CustomDrawerContent","props","paddingLeft","paddingTop","height","backgroundColor","require","width","styles","isim","closeDrawer","Drawer","NavigationDrawerStructure","navigationProps","flexDirection","uri","marginLeft","firstScreenStack","title","headerLeft","headerStyle","headerTintColor","headerTitleStyle","fontWeight","MyDrawer","activeTintColor","App","StyleSheet","create","marginTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet,View, Text, Button,Image,Header,TouchableOpacity } from 'react-native';\r\nimport { NavigationContainer, DrawerActions } from '@react-navigation/native';\r\n\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nconst Stack = createStackNavigator();\r\n\r\nimport {\r\n  createDrawerNavigator,\r\n  DrawerContentScrollView,\r\n  DrawerItemList,\r\n  DrawerItem,\r\n} from '@react-navigation/drawer';\r\nimport { BorderlessButton } from 'react-native-gesture-handler';\r\n\r\nfunction Feed({ navigation }) {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Feed Screen</Text>\r\n      \r\n      <Button\r\n        title=\"Open drawer\"\r\n        onPress={() => navigation.dispatch(DrawerActions.openDrawer())}\r\n      />\r\n      <Button\r\n        title=\"Toggle drawer\"\r\n        onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction Notifications() {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Notifications Screen</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction CustomDrawerContent(props) {\r\n  return (\r\n    <DrawerContentScrollView {...props}>\r\n      <View style={{paddingLeft:20,paddingTop:30,height:180,backgroundColor:'#f0f0f0'}}>\r\n      <Image source={require('./images/logo.png')} style={{height:76,width:200}} />\r\n      <Text style={styles.isim}>Mehmet HANEDAR</Text>\r\n      <Text>mehmethanedar@hotmail.com</Text>\r\n      </View>\r\n      <DrawerItemList {...props} />\r\n      <DrawerItem\r\n        label=\"Close drawer\"\r\n        onPress={() => props.navigation.dispatch(DrawerActions.closeDrawer())}\r\n      />\r\n      <DrawerItem\r\n        label=\"Toggle drawer\"\r\n        onPress={() => props.navigation.dispatch(DrawerActions.toggleDrawer())}\r\n      />\r\n    </DrawerContentScrollView>\r\n  );\r\n}\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nconst NavigationDrawerStructure = (props)=> {\r\n  //Structure for the navigatin Drawer\r\n  const toggleDrawer = () => {\r\n    //Props to open/close the drawer\r\n    props.navigationProps.toggleDrawer();\r\n  };\r\n\r\n  return (\r\n    <View style={{ flexDirection: 'row' }}>\r\n      <TouchableOpacity onPress={()=> toggleDrawer()}>\r\n        {/*Donute Button Image */}\r\n        <Image\r\n          source={{uri: 'https://raw.githubusercontent.com/AboutReact/sampleresource/master/drawerWhite.png'}}\r\n          style={{\r\n            width: 25,\r\n            height: 25,\r\n            marginLeft: 5\r\n          }}\r\n        />\r\n        \r\n      </TouchableOpacity>\r\n      <Image source={require('./images/logo.png')} style={{height:60,width:190}} />\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction firstScreenStack({ navigation }) {\r\n  return (\r\n      <Stack.Navigator initialRouteName=\"FirstPage\">\r\n        <Stack.Screen\r\n          name=\"FirstPage\"\r\n          component={Feed}\r\n          options={{\r\n            title: 'Triliya', //Set Header Title\r\n            \r\n            headerLeft: ()=>\r\n              <NavigationDrawerStructure\r\n                navigationProps={navigation}\r\n              />,\r\n            headerStyle: {\r\n              backgroundColor: '#f4511e', //Set Header color\r\n            },\r\n            headerTintColor: '#fff', //Set Header text color\r\n            headerTitleStyle: {\r\n              fontWeight: 'bold', //Set Header text style\r\n            },\r\n          }}\r\n        />\r\n      </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction MyDrawer() {\r\n  return (\r\n    <Drawer.Navigator\r\n        drawerContentOptions={{\r\n          activeTintColor: '#e91e63'\r\n        }}\r\n        drawerContent={props => <CustomDrawerContent {...props} />}>\r\n      <Drawer.Screen name=\"Feed\" component={firstScreenStack} />\r\n      <Drawer.Screen name=\"Notifications\" component={Notifications} />\r\n      <Drawer.Screen name=\"asdd\" component={Notifications} />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const toggleDrawer = () => {\r\n    //Props to open/close the drawer\r\n    props.navigationProps.toggleDrawer();\r\n  };\r\n  return (\r\n    <NavigationContainer>\r\n      <MyDrawer />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles=StyleSheet.create({\r\n  isim:{\r\n    fontWeight:'bold',\r\n    marginTop:20,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}