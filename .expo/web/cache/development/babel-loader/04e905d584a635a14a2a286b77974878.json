{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Source\\\\React Native\\\\React-MobilProje\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar Stack = createStackNavigator();\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport Notifications from \"./screens/Notifications.js\";\nimport Sepetim from \"./screens/Sepetim.js\";\nimport Home from \"./screens/Home.js\";\nimport CustomDrawerContent from \"./components/CustomDrawerContent.js\";\nimport NavigationDrawerOrder from \"./components/NavigationDrawerOrder.js\";\nimport NavigationDrawerStructure from \"./components/NavigationDrawerStructure.js\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nvar Drawer = createDrawerNavigator();\n\nvar firstScreenStack = function (_React$Component) {\n  _inherits(firstScreenStack, _React$Component);\n\n  var _super = _createSuper(firstScreenStack);\n\n  function firstScreenStack() {\n    _classCallCheck(this, firstScreenStack);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(firstScreenStack, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var navigation = this.props.navigation;\n      return React.createElement(Stack.Navigator, {\n        initialRouteName: \"FirstPage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"FirstPage\",\n        component: MyDrawer,\n        options: {\n          title: 'Triliya',\n          headerLeft: function headerLeft() {\n            return React.createElement(NavigationDrawerStructure, {\n              navigationProps: navigation,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 15\n              }\n            });\n          },\n          headerRight: function headerRight() {\n            return React.createElement(NavigationDrawerOrder, {\n              navigationProps: navigation,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 15\n              }\n            });\n          },\n          headerStyle: {\n            backgroundColor: '#f4511e'\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return firstScreenStack;\n}(React.Component);\n\nfunction MyDrawer(_ref) {\n  var _this2 = this;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  return React.createElement(Drawer.Navigator, {\n    initialRouteName: \"Home\",\n    drawerContentOptions: {\n      activeTintColor: '#e91e63'\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerContent, _extends({}, props, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 31\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Ana Sayfa\",\n    initialParams: {\n      params: route.params\n    },\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Bildirimler\",\n    component: Notifications,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Sepetim\",\n    component: Sepetim,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(MyDrawer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/Source/React Native/React-MobilProje/App.js"],"names":["React","NavigationContainer","createStackNavigator","Stack","createDrawerNavigator","Notifications","Sepetim","Home","CustomDrawerContent","NavigationDrawerOrder","NavigationDrawerStructure","Drawer","firstScreenStack","navigation","props","MyDrawer","title","headerLeft","headerRight","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","Component","route","activeTintColor","params","App"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\n\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nconst Stack = createStackNavigator();\r\n\r\nimport {\r\n  createDrawerNavigator,\r\n} from '@react-navigation/drawer';\r\n\r\nimport Notifications from './screens/Notifications.js';\r\nimport Sepetim from './screens/Sepetim.js';\r\nimport Home from './screens/Home.js';\r\nimport CustomDrawerContent from './components/CustomDrawerContent.js';\r\nimport NavigationDrawerOrder from './components/NavigationDrawerOrder.js';\r\nimport NavigationDrawerStructure from './components/NavigationDrawerStructure.js';\r\nimport { Alert } from 'react-native';\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\n\r\nclass firstScreenStack extends React.Component {\r\n  render() {\r\n    const { navigation } = this.props;\r\n    return (\r\n      <Stack.Navigator initialRouteName=\"FirstPage\">\r\n        <Stack.Screen\r\n          name=\"FirstPage\"\r\n          component={MyDrawer}\r\n          options={{\r\n            title: 'Triliya', //Set Header Title\r\n\r\n            headerLeft: () =>\r\n              <NavigationDrawerStructure\r\n                navigationProps={navigation}\r\n              />,\r\n            headerRight: () =>\r\n              <NavigationDrawerOrder\r\n                navigationProps={navigation}\r\n              />,\r\n\r\n            headerStyle: {\r\n              backgroundColor: '#f4511e', //Set Header color\r\n            },\r\n            headerTintColor: '#fff', //Set Header text color\r\n            headerTitleStyle: {\r\n              fontWeight: 'bold', //Set Header text style\r\n            },\r\n          }}\r\n        />\r\n\r\n      </Stack.Navigator>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction MyDrawer({ route, navigation }) {\r\n  return (\r\n    <Drawer.Navigator\r\n      initialRouteName=\"Home\"\r\n      drawerContentOptions={{\r\n        activeTintColor: '#e91e63'\r\n      }}\r\n      drawerContent={props => <CustomDrawerContent {...props} />}>\r\n      <Drawer.Screen name=\"Ana Sayfa\" initialParams={{ params: route.params }} component={Home} />\r\n      <Drawer.Screen name=\"Bildirimler\" component={Notifications} />\r\n      <Drawer.Screen name=\"Sepetim\" component={Sepetim} />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <MyDrawer />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}