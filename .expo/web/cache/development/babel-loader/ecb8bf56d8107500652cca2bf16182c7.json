{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Projects\\\\React Native\\\\React-MobilProje\\\\navigation\\\\DrawerNavigator.js\";\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport Contact from \"../screens/Contact.js\";\nimport Cart from \"../screens/Cart.js\";\nimport Home from \"../screens/Home.js\";\nimport MyStack from \"./StackNavigator.js\";\nimport CustomDrawerContent from \"../components/CustomDrawerContent.js\";\nimport { firebase } from \"../firebase.js\";\nimport LogOut from \"../screens/LogOut.js\";\nvar Drawer = createDrawerNavigator();\nexport default function MyDrawer() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      initializing = _useState2[0],\n      setInitializing = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(function () {\n    var subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n  if (initializing) return null;\n  return React.createElement(Drawer.Navigator, {\n    initialRouteName: \"Home\",\n    drawerContentOptions: {\n      activeTintColor: '#4bae32'\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerContent, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 37\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Ana Sayfa\",\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Sepetim\",\n    component: Cart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Iletisim\",\n    component: Contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), !user ? React.createElement(Drawer.Screen, {\n    name: \"Login\",\n    component: MyStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }) : React.createElement(Drawer.Screen, {\n    name: \"LogOut\",\n    component: LogOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }));\n}","map":{"version":3,"sources":["D:/Projects/React Native/React-MobilProje/navigation/DrawerNavigator.js"],"names":["React","useEffect","useState","createDrawerNavigator","Contact","Cart","Home","MyStack","CustomDrawerContent","firebase","LogOut","Drawer","MyDrawer","initializing","setInitializing","user","setUser","onAuthStateChanged","subscriber","auth","activeTintColor","props"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,OAAOC,OAAP;AACA,OAAOC,IAAP;AACA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,OAAOC,mBAAP;AACA,SAASC,QAAT;AACA,OAAOC,MAAP;AAEA,IAAMC,MAAM,GAAGR,qBAAqB,EAApC;AAGA,eAAe,SAASS,QAAT,GAAoB;AAAA;;AAAA,kBACSV,QAAQ,CAAC,IAAD,CADjB;AAAA;AAAA,MACxBW,YADwB;AAAA,MACVC,eADU;;AAAA,mBAEPZ,QAAQ,EAFD;AAAA;AAAA,MAExBa,IAFwB;AAAA,MAElBC,OAFkB;;AAK/B,WAASC,kBAAT,CAA4BF,IAA5B,EAAkC;AAC9BC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACA,QAAIF,YAAJ,EAAkBC,eAAe,CAAC,KAAD,CAAf;AACrB;;AAEDb,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMiB,UAAU,GAAGT,QAAQ,CAACU,IAAT,GAAgBF,kBAAhB,CAAmCA,kBAAnC,CAAnB;AACA,WAAOC,UAAP;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAIL,YAAJ,EAAkB,OAAO,IAAP;AAClB,SACI,oBAAC,MAAD,CAAQ,SAAR;AACI,IAAA,gBAAgB,EAAC,MADrB;AAEI,IAAA,oBAAoB,EAAE;AAClBO,MAAAA,eAAe,EAAE;AADC,KAF1B;AAKI,IAAA,aAAa,EAAE,uBAAAC,KAAK;AAAA,aAAI,oBAAC,mBAAD,eAAyBA,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAJ;AAAA,KALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,WAApB;AAAgC,IAAA,SAAS,EAAEf,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,SAApB;AAA8B,IAAA,SAAS,EAAED,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,UAApB;AAA+B,IAAA,SAAS,EAAED,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASK,CAACW,IAAD,GACG,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAER,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAGO,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,QAApB;AAA6B,IAAA,SAAS,EAAEG,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZZ,CADJ;AAiBH","sourcesContent":["import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport Contact from '../screens/Contact.js';\r\nimport Cart from '../screens/Cart.js';\r\nimport Home from '../screens/Home.js';\r\nimport MyStack from './StackNavigator.js';\r\nimport CustomDrawerContent from '../components/CustomDrawerContent.js';\r\nimport { firebase } from '../firebase.js'\r\nimport LogOut from '../screens/LogOut.js'\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\n\r\nexport default function MyDrawer() {\r\n    const [initializing, setInitializing] = useState(true);\r\n    const [user, setUser] = useState();\r\n\r\n    // Handle user state changes\r\n    function onAuthStateChanged(user) {\r\n        setUser(user);\r\n        if (initializing) setInitializing(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\r\n        return subscriber; // unsubscribe on unmount\r\n    }, []);\r\n\r\n    if (initializing) return null;\r\n    return (\r\n        <Drawer.Navigator\r\n            initialRouteName=\"Home\"\r\n            drawerContentOptions={{\r\n                activeTintColor: '#4bae32',\r\n            }}\r\n            drawerContent={props => <CustomDrawerContent {...props} />}>\r\n            <Drawer.Screen name=\"Ana Sayfa\" component={Home} />\r\n            <Drawer.Screen name=\"Sepetim\" component={Cart} />\r\n            <Drawer.Screen name=\"Iletisim\" component={Contact} />\r\n            {!user ? (\r\n                <Drawer.Screen name=\"Login\" component={MyStack} />\r\n            ) : (\r\n                    <Drawer.Screen name=\"LogOut\" component={LogOut} />\r\n                )}\r\n        </Drawer.Navigator>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}