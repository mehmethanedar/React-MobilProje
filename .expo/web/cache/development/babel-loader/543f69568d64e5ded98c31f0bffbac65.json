{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"D:\\\\Projects\\\\React Native\\\\React-MobilProje\\\\App.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Header } from \"react-native-web/dist/index\";\nimport { NavigationContainer, DrawerActions } from '@react-navigation/native';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\n\nfunction Feed(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Feed Screen\"), React.createElement(Button, {\n    title: \"Open drawer\",\n    onPress: function onPress() {\n      return navigation.dispatch(DrawerActions.openDrawer());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Toggle drawer\",\n    onPress: function onPress() {\n      return navigation.dispatch(DrawerActions.toggleDrawer());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Notifications() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Notifications Screen\"));\n}\n\nfunction CustomDrawerContent(props) {\n  return React.createElement(DrawerContentScrollView, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(DrawerItemList, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  })), React.createElement(DrawerItem, {\n    label: \"Close drawer\",\n    onPress: function onPress() {\n      return props.navigation.dispatch(DrawerActions.closeDrawer());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(DrawerItem, {\n    label: \"Toggle drawer\",\n    onPress: function onPress() {\n      return props.navigation.dispatch(DrawerActions.toggleDrawer());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Drawer = createDrawerNavigator();\n\nfunction MyDrawer() {\n  var _this = this;\n\n  return React.createElement(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerContent, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 47\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Feed\",\n    component: Feed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Notifications\",\n    component: Notifications,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"asdd\",\n    component: Notifications,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function App() {\n  return React.createElement(Header, {\n    placement: \"left\",\n    leftComponent: {\n      icon: 'menu',\n      color: '#fff'\n    },\n    centerComponent: {\n      text: 'MY TITLE',\n      style: {\n        color: '#fff'\n      }\n    },\n    rightComponent: {\n      icon: 'home',\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }), React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(MyDrawer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/Projects/React Native/React-MobilProje/App.js"],"names":["React","Header","NavigationContainer","DrawerActions","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","Feed","navigation","flex","justifyContent","alignItems","dispatch","openDrawer","toggleDrawer","Notifications","CustomDrawerContent","props","height","closeDrawer","Drawer","MyDrawer","App","icon","color","text","style"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View, Text, Button,Image,Header } from 'react-native';\r\nimport { NavigationContainer, DrawerActions } from '@react-navigation/native';\r\nimport {\r\n  createDrawerNavigator,\r\n  DrawerContentScrollView,\r\n  DrawerItemList,\r\n  DrawerItem,\r\n} from '@react-navigation/drawer';\r\n\r\nfunction Feed({ navigation }) {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Feed Screen</Text>\r\n      <Button\r\n        title=\"Open drawer\"\r\n        onPress={() => navigation.dispatch(DrawerActions.openDrawer())}\r\n      />\r\n      <Button\r\n        title=\"Toggle drawer\"\r\n        onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction Notifications() {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Notifications Screen</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction CustomDrawerContent(props) {\r\n  return (\r\n    <DrawerContentScrollView {...props}>\r\n      <View style={{height:100}}>\r\n      \r\n      </View>\r\n      <DrawerItemList {...props} />\r\n      <DrawerItem\r\n        label=\"Close drawer\"\r\n        onPress={() => props.navigation.dispatch(DrawerActions.closeDrawer())}\r\n      />\r\n      <DrawerItem\r\n        label=\"Toggle drawer\"\r\n        onPress={() => props.navigation.dispatch(DrawerActions.toggleDrawer())}\r\n      />\r\n    </DrawerContentScrollView>\r\n  );\r\n}\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nfunction MyDrawer() {\r\n  return (\r\n    <Drawer.Navigator drawerContent={props => <CustomDrawerContent {...props} />}>\r\n      <Drawer.Screen name=\"Feed\" component={Feed} />\r\n      <Drawer.Screen name=\"Notifications\" component={Notifications} />\r\n      <Drawer.Screen name=\"asdd\" component={Notifications} />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <Header\r\n  placement=\"left\"\r\n  leftComponent={{ icon: 'menu', color: '#fff' }}\r\n  centerComponent={{ text: 'MY TITLE', style: { color: '#fff' } }}\r\n  rightComponent={{ icon: 'home', color: '#fff' }}\r\n/>,\r\n    <NavigationContainer>\r\n      <MyDrawer />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}